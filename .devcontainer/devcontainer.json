// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/typescript-node
{
  "name": "TalkForm",
  "image": "mcr.microsoft.com/devcontainers/javascript-node:0-18-bullseye",
  "remoteUser": "root",
  "containerUser": "root",

  // https://community.doppler.com/t/vscode-container-support/104
  // https://community.doppler.com/t/doppler-and-github-codespaces/989/2
  "containerEnv": {
    "DOPPLER_TOKEN": "${localEnv:DOPPLER_CLI_TOKEN}"
  },

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/ellipsis-dev/devcontainer/cli:0.2.7": {},
    "ghcr.io/metcalfc/devcontainer-features/doppler:0.1.1": {}
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    3000,
    65455 // Required for Ellipsis
  ],
  "portsAttributes": {
    "3000": {
      "label": "website"
    },
    "65455": {
      // This opens a port, allowing the CLI to contact the Ellipsis API
      "label": "Ellipsis",
      "onAutoForward": "silent",
      "requireLocalPort": true
    }
  },
  "postStartCommand": "nohup bash -c 'ellipsis listener start . &'", // This allows Ellipsis to write file changes in the codespace.

  // TODO can't get the yarn install within Dockerfile to show up in dev container.
  // This also seems to be what the Microsoft example devcontainers do.
  "postCreateCommand": "yarn install --frozen-lockfile",

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "settings": {},
      "extensions": [
        "dbaeumer.vscode-eslint",
        "eamodio.gitlens",
        "esbenp.prettier-vscode",
        "GitHub.copilot",
        "k--kato.intellij-idea-keybindings",
        "Orta.vscode-jest",
        "ms-azuretools.vscode-docker"
      ]
    }
  }
}
